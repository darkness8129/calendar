{"version":3,"sources":["components/Home/Calendar/calendarFunctions.js","components/Home/Calendar/PopUp/PopUp.jsx","components/Home/Calendar/Calendar.jsx","components/Home/Calendar/CalendarContainer.jsx","redux/actionCreators.js","redux/actionTypes.js","components/Home/ImgBlock/ImgBlock.jsx","components/Home/Home.jsx","components/About/AboutText/AboutText.jsx","components/About/About.jsx","components/Header/Logo/Logo.jsx","components/Header/Nav/NavBtn/NavBtn.jsx","components/Header/Nav/Nav.jsx","components/Header/Header.jsx","App.js","redux/calendarReducer.js","redux/store.js","index.js"],"names":["numberOfDaysInMonth","getYear","date","getFullYear","getMonth","getNameOfMonthInLetters","toLocaleString","month","getDayNum","day","getDaysOfMonth","year","result","Date","daysInMonth","getDaysInMonth","monthStart","getDayOfWeek","i","j","undefined","isLeapYear","dayOfWeek","getDay","PopUp","dayName","dayNum","className","id","type","data-dismiss","aria-label","aria-hidden","htmlFor","readOnly","value","daysOfWeekArr","Calendar","calendar","selectDate","switchMonth","setDaysOfMonth","days","currentMonth","map","week","index","key","data-toggle","data-target","classNames","day_active","date1","date2","currentDateToday","getDate","onClick","onSelectDate","daysOfWeek","currentDate","selectedDate","weekday","CalendarContainer","connect","state","calendarReducer","dispatch","selectDateActionCreator","switchedDate","switchMonthCreator","daysOfMonth","setDaysOfMonthActionCreator","ImgBlock","Home","AboutText","About","Logo","href","src","alt","NavBtn","isOpen","toggleIsOpen","aria-controls","aria-expanded","navLinksItems","path","title","Nav","navLinks","navLink","exact","to","activeClassName","show","Header","useState","setIsOpen","header_active","App","render","initialState","reducers","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.469880ac.chunk.js","sourcesContent":["//number days in each months\r\nconst numberOfDaysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n// func for getting year of date \r\nexport const getYear = (date) => date.getFullYear();\r\n\r\n// func for getting month of date\r\nexport const getMonth = (date) => date.getMonth();\r\n\r\n// func for getting name of month\r\nexport const getNameOfMonthInLetters = (date) =>\r\n    date.toLocaleString('eng', {\r\n        month: 'long',\r\n    });\r\n\r\n// func for getting name of day\r\nexport const getNameOfDayInLetters = (date) =>\r\n    date.toLocaleString('eng', { weekday: 'long' });\r\n\r\n//func for getting day number\r\nexport const getDayNum = (date) =>\r\n    date.toLocaleString('eng', {\r\n        day: 'numeric',\r\n    });\r\n\r\n//func for checking is year leap\r\nconst isLeapYear = (year) => ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n\r\n//func that return arr with days for specific month \r\nexport const getDaysOfMonth = (year, month) => {\r\n    const result = [];\r\n    const date = new Date(year, month);\r\n    const daysInMonth = getDaysInMonth(date);\r\n    const monthStart = getDayOfWeek(date);\r\n\r\n    let day = 1;\r\n\r\n    for (let i = 0; i < (daysInMonth + monthStart) / 7; i++) {\r\n        result[i] = []\r\n\r\n        // j < 7  - 7 days in week\r\n        for (let j = 0; j < 7; j++) {\r\n            //i === 0 - first week\r\n            if ((i === 0 && j < monthStart) || day > daysInMonth) {\r\n                result[i][j] = undefined;\r\n            }\r\n            else {\r\n                result[i][j] = new Date(year, month, day++);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n//func getting number of days in month\r\nconst getDaysInMonth = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n\r\n    const daysInMonth = numberOfDaysInMonth[date.getMonth()]\r\n    //1 because february has index 1\r\n    return (isLeapYear(year) && month === 1) ? daysInMonth + 1 : daysInMonth;\r\n}\r\n\r\n// func for getting number of day in week (0 - Monday, 6 - Sunday)\r\nconst getDayOfWeek = (date) => {\r\n    const dayOfWeek = date.getDay();\r\n\r\n    return dayOfWeek === 0 ? 6 : dayOfWeek - 1;\r\n}\r\n\r\n//func for checking are dates equal\r\nexport const areDatesEqual = (date1, date2) => {\r\n    if (!date1 || !date2) return false;\r\n\r\n    return (date1.getFullYear() === date2.getFullYear() &&\r\n        date1.getMonth() === date2.getMonth() &&\r\n        date1.getDate() === date2.getDate());\r\n}","import React from 'react';\r\nimport './PopUp.scss';\r\n\r\nconst PopUp = ({ month, dayName, dayNum }) => {\r\n    return (\r\n        <div className='modal' id='date-modal'>\r\n            <div className='modal-dialog modal-dialog-centered'>\r\n                <div className='modal-content'>\r\n                    <button\r\n                        type='button'\r\n                        className='close'\r\n                        data-dismiss='modal'\r\n                        aria-label='Close'\r\n                    >\r\n                        <span aria-hidden='true'>&times;</span>\r\n                    </button>\r\n                    <div className='modal-body'>\r\n                        <div>\r\n                            <label htmlFor='month'>\r\n                                Month:\r\n                                <input\r\n                                    id='month'\r\n                                    readOnly\r\n                                    value={month}\r\n                                ></input>\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor='day'>\r\n                                Day:\r\n                                <input\r\n                                    id='day'\r\n                                    readOnly\r\n                                    value={`${dayNum},  ${dayName}`}\r\n                                ></input>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopUp;\r\n","import React from 'react';\r\nimport './Calendar.scss';\r\nimport {\r\n    getDaysOfMonth,\r\n    areDatesEqual,\r\n    getYear,\r\n    getMonth,\r\n    getNameOfMonthInLetters,\r\n    getNameOfDayInLetters,\r\n    getDayNum,\r\n} from './calendarFunctions';\r\nimport classNames from 'classnames';\r\nimport PopUp from './PopUp/PopUp';\r\n\r\nconst daysOfWeekArr = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\r\n\r\nconst Calendar = ({ calendar, selectDate, switchMonth, setDaysOfMonth }) => {\r\n    const days = calendar.currentMonth.map((week, index) => {\r\n        return (\r\n            <div className='week' key={index}>\r\n                {week.map((day, index) => {\r\n                    return day ? (\r\n                        <a\r\n                            key={index}\r\n                            data-toggle='modal'\r\n                            data-target='#date-modal'\r\n                        >\r\n                            <div\r\n                                className={classNames('day', {\r\n                                    day_active: areDatesEqual(\r\n                                        day,\r\n                                        calendar.currentDateToday\r\n                                    ),\r\n                                })}\r\n                                onClick={() => onSelectDate(day)}\r\n                            >\r\n                                {day.getDate() < 10\r\n                                    ? '0' + day.getDate()\r\n                                    : day.getDate()}\r\n                            </div>\r\n                        </a>\r\n                    ) : (\r\n                        <div key={index}></div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const daysOfWeek = daysOfWeekArr.map((day, index) => {\r\n        return (\r\n            <div className='day-of-week' key={index}>\r\n                {day}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const showNextMonth = () => {\r\n        const year = getYear(calendar.currentDate);\r\n        const month = getMonth(calendar.currentDate);\r\n        const date = new Date(year, month + 1);\r\n\r\n        switchMonth(date);\r\n        setDaysOfMonth(getDaysOfMonth(year, month + 1));\r\n    };\r\n\r\n    const showPrevMonth = () => {\r\n        const year = getYear(calendar.currentDate);\r\n        const month = getMonth(calendar.currentDate);\r\n        const date = new Date(year, month - 1);\r\n\r\n        switchMonth(date);\r\n        setDaysOfMonth(getDaysOfMonth(year, month - 1));\r\n    };\r\n\r\n    const onSelectDate = (date) => {\r\n        selectDate(date);\r\n    };\r\n\r\n    return (\r\n        <div className='calendar'>\r\n            <div className='calendar-container'>\r\n                <div className='date-switcher'>\r\n                    <i className='arr_left' onClick={showPrevMonth} />\r\n                    <span className='switcher-text'>{`${getNameOfMonthInLetters(\r\n                        calendar.currentDate\r\n                    )} ${getYear(calendar.currentDate)}`}</span>\r\n                    <i className='arr_right' onClick={showNextMonth} />\r\n                </div>\r\n                <div className='calendar-dates'>{days}</div>\r\n                <div className='calendar-days'>{daysOfWeek}</div>\r\n            </div>\r\n\r\n            <PopUp\r\n                month={getNameOfMonthInLetters(calendar.selectedDate)}\r\n                dayName={getNameOfDayInLetters(calendar.selectedDate)}\r\n                dayNum={getDayNum(calendar.selectedDate)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n","import { connect } from 'react-redux';\r\nimport {\r\n    selectDateActionCreator,\r\n    switchMonthCreator,\r\n    setDaysOfMonthActionCreator,\r\n} from '../../../redux/actionCreators';\r\nimport Calendar from './Calendar';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    calendar: state.calendarReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectDate: (date) => dispatch(selectDateActionCreator(date)),\r\n        switchMonth: (switchedDate) =>\r\n            dispatch(switchMonthCreator(switchedDate)),\r\n        setDaysOfMonth: (daysOfMonth) =>\r\n            dispatch(setDaysOfMonthActionCreator(daysOfMonth)),\r\n    };\r\n};\r\n\r\nconst CalendarContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Calendar);\r\n\r\nexport default CalendarContainer;\r\n","import * as ActionTypes from './actionTypes';\r\n\r\nexport const switchMonthCreator = (switchedDate) => ({ type: ActionTypes.switchMonth, switchedDate: switchedDate });\r\n\r\nexport const selectDateActionCreator = (date) => ({ type: ActionTypes.selectDate, date: date });\r\n\r\nexport const setDaysOfMonthActionCreator = (daysOfMonth) => ({ type: ActionTypes.setDaysOfMonth, daysOfMonth: daysOfMonth })","export const switchMonth = 'SWITCH_MONTH';\r\nexport const selectDate = 'SELECT_DATE';\r\nexport const setDaysOfMonth = 'SET_DAYS_OF_MONTH';","import React from 'react';\r\nimport './ImgBlock.scss';\r\n\r\nconst ImgBlock = () => {\r\n    return (\r\n        <div className='img-block'>\r\n            <div className='img-text'>\r\n                <h1 className='img-title'>Choose the day for the meeting</h1>\r\n                <p>\r\n                    We encourage you to took your appointment online. This will\r\n                    save you time.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImgBlock;\r\n","import React from 'react';\r\nimport CalendarContainer from './Calendar/CalendarContainer';\r\nimport ImgBlock from './ImgBlock/ImgBlock';\r\nimport './Home.scss';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='home'>\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    <div className='col-lg-8 p-0'>\r\n                        <ImgBlock />\r\n                    </div>\r\n                    <div className='col-lg-4 p-0'>\r\n                        <CalendarContainer />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst AboutText = () => {\r\n    return (\r\n        <div className='about-text'>\r\n            <p>\r\n                Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quis\r\n                exercitationem praesentium assumenda voluptate dignissimos\r\n                itaque reiciendis perferendis, expedita vel iste!\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                Maiores, dignissimos. Veniam minima soluta dolor illum. Quisquam\r\n                quos sed sint culpa impedit omnis sapiente nisi, in perspiciatis\r\n                optio aliquid totam eius architecto quae repudiandae, harum\r\n                maiores cum blanditiis alias pariatur vero? Laborum quam velit,\r\n                dolor veritatis repellat ut dolorem optio officia.\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quis\r\n                exercitationem praesentium assumenda voluptate dignissimos\r\n                itaque reiciendis perferendis, expedita vel iste!\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                Maiores, dignissimos. Veniam minima soluta dolor illum. Quisquam\r\n                quos sed sint culpa impedit omnis sapiente nisi, in perspiciatis\r\n                optio aliquid totam eius architecto quae repudiandae, harum\r\n                maiores cum blanditiis alias pariatur vero? Laborum quam velit,\r\n                dolor veritatis repellat ut dolorem optio officia.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutText;\r\n","import React from 'react';\r\nimport AboutText from './AboutText/AboutText';\r\nimport './About.scss';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className='container'>\r\n            <div className='about'>\r\n                <h1 className='title'>Lorem ipsum dolor sit.</h1>\r\n                <AboutText />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport './Logo.scss';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <a href='https://werdevs.studio/'>\r\n            <img src='/images/logo.jpg' alt='logo' className='logo' />\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport './NavBtn.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst NavBtn = ({ isOpen, toggleIsOpen }) => {\r\n    return (\r\n        <button\r\n            className='navbar-toggler'\r\n            type='button'\r\n            data-toggle='collapse'\r\n            data-target='#navbarSupportedContent'\r\n            aria-controls='navbarSupportedContent'\r\n            aria-expanded='false'\r\n            aria-label='Toggle navigation'\r\n            onClick={toggleIsOpen}\r\n        >\r\n            <span\r\n                className={classNames('toggler-icon', {\r\n                    'toggler-icon_active': isOpen,\r\n                })}\r\n            ></span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default NavBtn;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Nav.scss';\r\nimport NavBtn from './NavBtn/NavBtn';\r\nimport classNames from 'classnames';\r\n\r\nconst navLinksItems = [\r\n    {\r\n        path: '/',\r\n        title: 'Home',\r\n        id: 1,\r\n    },\r\n    {\r\n        path: '/about',\r\n        title: 'About',\r\n        id: 2,\r\n    },\r\n];\r\n\r\nconst Nav = ({ isOpen, toggleIsOpen }) => {\r\n    const navLinks = navLinksItems.map((navLink) => {\r\n        return (\r\n            <li className='nav-item' key={navLink.id}>\r\n                <NavLink\r\n                    exact\r\n                    to={navLink.path}\r\n                    className='nav-link'\r\n                    activeClassName='nav-link_active'\r\n                    onClick={toggleIsOpen}\r\n                >\r\n                    {navLink.title}\r\n                </NavLink>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-sm'>\r\n            <NavBtn isOpen={isOpen} toggleIsOpen={toggleIsOpen} />\r\n            <div\r\n                className={classNames('collapse', 'navbar-collapse', {\r\n                    show: isOpen,\r\n                })}\r\n                id='navbarSupportedContent'\r\n            >\r\n                <ul className='navbar-nav mr-auto'>{navLinks}</ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState } from 'react';\r\nimport './Header.scss';\r\nimport Logo from './Logo/Logo';\r\nimport Nav from './Nav/Nav';\r\nimport classNames from 'classnames';\r\n\r\nconst Header = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleIsOpen = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <header\r\n            className={classNames('header', {\r\n                header_active: isOpen,\r\n            })}\r\n        >\r\n            <Logo />\r\n            <Nav isOpen={isOpen} toggleIsOpen={toggleIsOpen} />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Header from './components/Header/Header';\nimport './scss/base.scss';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"content\">\n                <Switch>\n                    <Route exact path='/' render={() => <Home />} />\n                    <Route exact path='/about' render={() => <About />} />\n                    <Redirect to='/' />\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import * as ActionTypes from './actionTypes';\r\nimport { getDaysOfMonth } from './../components/Home/Calendar/calendarFunctions';\r\n\r\n// getting days for current month\r\nconst currentDate = new Date();\r\nconst currentMonthDays = getDaysOfMonth(currentDate.getFullYear(), currentDate.getMonth());\r\n\r\nconst initialState = {\r\n    currentMonth: currentMonthDays,\r\n    currentDate: currentDate,\r\n    currentDateToday: currentDate,\r\n    selectedDate: currentDate\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.switchMonth:\r\n            return { ...state, currentDate: action.switchedDate };\r\n\r\n        case ActionTypes.selectDate:\r\n            return { ...state, selectedDate: action.date };\r\n\r\n        case ActionTypes.setDaysOfMonth:\r\n            return { ...state, currentMonth: action.daysOfMonth };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\nconst reducers = combineReducers({ calendarReducer });\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store} >\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}